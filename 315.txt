### 数组的初始化

###### 数组的初始化主要分布为动态初始化和静态初始化

1、动态初始化：在创建数组时，直接指定数组中元素的个数

```java
int[] array = new int[10];
```

2、静态初始化：在创建数组时不直接指定数据元素个数，而直接将具体的数据内容进行指定

​    语法格式：

```
T[] 数组名称 ={data1,data2,data3, ... ,};
```

```java
int[] array1 ={0,1,2,3,4,5,6,7,8,9};
double[] array2 =new dounle[]{1.0,2.0,3.0,4.0,5.0};
String[] array3 =new String[]{"hello","JAVA","!!！"}；
```

###### 注意事项

1、静态初始化虽然没有指定数组的长度，编译器在编译时会根据{}中元素个数来确定数组的长度。

2、静态初始化时，{}中数据类型必须与[]前数据类型一致。

3、静态初始化可以简写，省去后面的new T[]。



###### 如果数组中储存元素类型为引用类型，默认值为null

### 数组的使用

数组在内存中是一段连续空间，空间的编号都是从0开始的，依次递增，该编号称为数组的下标，数组可以通过下标访问其任意位置的元素。

for each 增强for循环 

```java
//  数组当中数据的类型定义的变量 ： 数组名
for (int x : array1){
    System.out.print(x+" ");
}
System.out.println();
```

*JAVA当中有 一个工具，可以专门用来操作数组，这个工具叫做Arrays.

//把数组转变为字符串，然后返回

```java
String ret =Arrays.toString(array1); 
```

一个引用不能指向多个对象

### 数组排序（冒泡排序）

给定一个是古族，让数组升序（降序）排序

假设排升序：

1、将数组中相邻元素从前往后依次进行比较，如果前一个元素比后一个元素大，则交换，一趟下来后最大元素就在数组的末尾。

2、依次从上述过程，直到数组中所有的元素都排列好

数组指针：指向数组的指针

指针数组：存放指针的数组

数组指针数组：存放数组指针的数组

### 类和对象

###### 注意事项

1、一般一个文件当中只定义一个类

2、main方法所在的类一般要使用public修饰注意：Eclipse默认会在public修饰的类中找main方法

3、public修饰的类必须要和文件名相同

4、不要轻易去修改public修饰的类的名称，如果要修改，通过开发工具修改

当成员变量没有初始化的时候，默认值就是对应的初始值。

引用类型-》null